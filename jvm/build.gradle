// Copyright (c) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE file in the project root
// for full license information.


buildscript {
    ext.kotlin_version = '1.1.0'

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'kotlin'

version = '5.0.0'
sourceCompatibility = 1.6

repositories {
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    testCompile 'junit:junit:4.12'
}

def gbcOutputPath = "$buildDir/generated-src"
def gbcOutputDir = file("$gbcOutputPath")

allprojects {
    task coreCodegen(type:Exec) {
        commandLine '../build/compiler/build/gbc/gbc', 'java',
            '-n', 'bond=com.microsoft.bond',
            '../idl/bond/core/bond.bond',
            '../idl/bond/core/bond_const.bond',
            '--output', "$gbcOutputPath"
    }
    compileKotlin.dependsOn coreCodegen
}

sourceSets {
    main {
        java {
            srcDirs += gbcOutputDir
        }
    }
}

jar {
    // This stanza adds "everything" to the jar, which will include the kotlin
    // stdlib. Making this function more complicated should allow us to shave
    // some bytes off the final jar.
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}
